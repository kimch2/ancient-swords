--表头	
function npctop1()  
  Hero:ActFun(101,"&&<0_有人的地方，就有江湖。><br>&&<0_你准备好了吗？>",0)
end

--任务101接受
function npcmid01010()
  Hero:ActFun(102,"[44]大侠之路 2011601",0)
end

--任务101未完成
function npcmid01011()
  Hero:ActFun(102,"[3]大侠之路 2011615",0)
end

--任务101已完成
function npcmid01012()
  Hero:ActFun(102,"[22]大侠之路 2011601",0)
end

--任务102接受
function npcmid01020()
  Hero:ActFun(102,"[44]第一次加入门派 2011602",0)
end

--任务102未完成
function npcmid01021()
  Hero:ActFun(102,"[3]第一次加入门派 2011618",0)
end

--任务102已完成
function npcmid01022()
  Hero:ActFun(102,"[22]第一次加入门派 2011602",0)
end

--任务127接受
function npcmid01270()
  Hero:ActFun(102,"[44]回访洛神 2011603",0)
end

--任务127未完成
function npcmid01271()
  Hero:ActFun(102,"[3]回访洛神 2011619",0)
end

--任务127已完成
function npcmid01272()
  Hero:ActFun(102,"[22]回访洛神 2011603",0)
end

--任务128接受
function npcmid01280()
  Hero:ActFun(102,"[44]千里之行，始于足下 2011604",0)
end

--任务128未完成
function npcmid01281()
  Hero:ActFun(102,"[3]千里之行，始于足下 2011620",0)
end

--任务128已完成
function npcmid01282()
  Hero:ActFun(102,"[22]千里之行，始于足下 2011604",0)
end

--任务129接受
function npcmid01290()
  Hero:ActFun(102,"[44]千里之行，始于足下 2011616",0)
end

--任务129未完成
function npcmid01291()
  Hero:ActFun(102,"[3]千里之行，始于足下 2011621",0)
end

--任务129已完成
function npcmid01292()
  Hero:ActFun(102,"[22]千里之行，始于足下 2011616",0)
end

--任务301接受
function npcmid03010()

  Hero:ActFun(102,"[44]第一把武器 2011605",0)
end

--任务301未完成
function npcmid03011()
  Hero:ActFun(102,"[3]第一把武器 2011622",0)
end

--任务301已完成
function npcmid03012()
  Hero:ActFun(102,"[22]第一把武器 2011605",0)
end

--任务302接受
function npcmid03020()
  Hero:ActFun(102,"[44]第一把武器 2011606",0)
end

--任务302未完成
function npcmid03021()
  Hero:ActFun(102,"[3]第一把武器 2011623",0)
end

--任务302已完成
function npcmid03022()
  Hero:ActFun(102,"[22]第一把武器 2011606",0)
end

--任务303接受
function npcmid03030()
  Hero:ActFun(102,"[44]第一次战斗 2011607",0)
end

--任务303未完成
function npcmid03031()
  Hero:ActFun(102,"[3]第一次战斗 2011624",0)
end

--任务303已完成
function npcmid03032()
  Hero:ActFun(102,"[22]第一次战斗 2011607",0)
end

--任务304接受
function npcmid03040()
  Hero:ActFun(102,"[44]第一只宠物 2011608",0)
end

--任务304未完成
function npcmid03041()
  Hero:ActFun(102,"[3]第一只宠物 2011625",0)
end

--任务304已完成
function npcmid03042()
  Hero:ActFun(102,"[22]第一只宠物 2011608",0)
end

--任务305接受
function npcmid03050()
  Hero:ActFun(102,"[44]第一只宠物 2011609",0)
end

--任务305未完成
function npcmid03051()
  Hero:ActFun(102,"[3]第一只宠物 2011626",0)
end

--任务305已完成
function npcmid03052()
  Hero:ActFun(102,"[22]第一只宠物 2011609",0)
end

--任务306接受
function npcmid03060()
  Hero:ActFun(102,"[44]再次战斗 2011610",0)
end

--任务306未完成
function npcmid03061()
  Hero:ActFun(102,"[3]再次战斗 2011627",0)
end

--任务306已完成
function npcmid03062()
  Hero:ActFun(102,"[22]再次战斗 2011610",0)
end

--任务307接受
function npcmid03070()
  Hero:ActFun(102,"[44]第一次使用药品 2011611",0)
end

--任务307未完成
function npcmid03071()
  Hero:ActFun(102,"[3]第一次使用药品 2011628",0)
end

--任务307已完成
function npcmid03072()
  Hero:ActFun(102,"[22]第一次使用药品 2011611",0)
end

--任务308接受
function npcmid03080()
  Hero:ActFun(102,"[44]第一次使用药品 2011612",0)
end

--任务308未完成
function npcmid03081()
  Hero:ActFun(102,"[3]第一次使用药品 2011629",0)
end

--任务308已完成
function npcmid03082()
  Hero:ActFun(102,"[22]第一次使用药品 2011612",0)
end

--任务309接受
function npcmid03090()
  Hero:ActFun(102,"[44]一代名侠 2011613",0)
end

--任务309未完成
function npcmid03091()
  Hero:ActFun(102,"[3]一代名侠 2011630",0)
end

--任务309已完成
function npcmid03092()
  Hero:ActFun(102,"[22]一代名侠 2011613",0)
end

--任务311接受
function npcmid03110()
  Hero:ActFun(102,"[44]一代名侠 2011614",0)
end

--任务311未完成
function npcmid03111()
  Hero:ActFun(102,"[3]一代名侠 2011631",0)
end

--任务311已完成
function npcmid03112()
  Hero:ActFun(102,"[22]一代名侠 2011614",0)
end

--封测礼品
function npcmid01161()
  Hero:ActFun(102,"[1]领取每日封测礼包 2011617",0)
end

--江湖指南
function npcmid01162()
  Hero:ActFun(102,"[1]领取江湖指南 2011632",0)
end

--表尾
function npcTail()
  Hero:ActFun(103,"",0)
end 
  
--转向选项 101 
function npctask1()
  Hero:ActFun(1046,"1 1",3)
end

--转向任务102  
function npctask2()
  Hero:ActFun(1046,"1 2",3)
end

--转向任务103  
function npctask3()
  Hero:ActFun(1046,"1 27",3)
end

--转向任务104  
function npctask4()
  Hero:ActFun(1046,"1 28",3)
end

--转向任务105  
function npctask16()
  Hero:ActFun(1046,"1 29",3)
end

--转向任务301  
function npctask5()
  Hero:ActFun(1046,"3 1",3)
end

--转向任务302  
function npctask6()

  Hero:ActFun(1046,"3 2",3)
end

--转向任务303  
function npctask7()
  Hero:ActFun(1046,"3 3",3)
end

--转向任务304  
function npctask8()
  Hero:ActFun(1046,"3 4",3)
end

--转向任务305  
function npctask9()
  Hero:ActFun(1046,"3 5",3)
end

--转向任务306  
function npctask10()
  Hero:ActFun(1046,"3 6",3)
end

--转向任务307  
function npctask11()
  Hero:ActFun(1046,"3 7",3)
end

--转向任务308  
function npctask12()
  Hero:ActFun(1046,"3 8",3)
end

--转向任务309  
function npctask13()
  Hero:ActFun(1046,"3 9",3)
end

--转向任务310  
function npctask14()
  Hero:ActFun(1046,"3 11",3)
end

--任务101未完成   
function npctask15()
  Hero:ActFun(1046,"1 1",29)
end

--领取封测礼品  
function npctask17()
	if(Hero:ActFun(508,"48 2",0) == true)then
  	Hero:ActFun(519,"10 1",630006)
  	Hero:ActFun(519,"10 1",610024)
  	if(Hero:ActFun(1001,"level >= 15",0) == true)then
  		Hero:ActFun(1001,"money += 100000",1)
  	else
  		Hero:ActFun(1001,"money += 100000",2)
  	end
		Hero:ActFun(1001,"money += 300",4)
		Hero:ActFun(127,"你获得了300珠宝，可以在商城里购物啦^o^",0)
  	Hero:ActFun(1080,"daymask += 1",1)
  else
  	Hero:ActFun(127,"背包已满，请清理背包再来领取",0)
  end
end

--任务101未完成   
function npctask18()
  Hero:ActFun(1046,"1 2",29)
end

--任务101未完成   
function npctask19()
  Hero:ActFun(1046,"1 27",29)
end

--任务101未完成   
function npctask20()
  Hero:ActFun(1046,"1 28",29)
end

--任务101未完成   
function npctask21()
  Hero:ActFun(1046,"1 29",29)
end

--任务101未完成   
function npctask22()
  Hero:ActFun(1046,"3 1",29)
end

--任务101未完成   
function npctask23()
  Hero:ActFun(1046,"3 2",29)
end

--任务101未完成   
function npctask24()
  Hero:ActFun(1046,"3 3",29)
end

--任务101未完成   
function npctask25()
  Hero:ActFun(1046,"3 4",29)
end

--任务101未完成   
function npctask26()
  Hero:ActFun(1046,"3 5",29)
end

--任务101未完成   
function npctask27()
  Hero:ActFun(1046,"3 6",29)
end

--任务101未完成   
function npctask28()
  Hero:ActFun(1046,"3 7",29)
end

--任务101未完成   
function npctask29()
  Hero:ActFun(1046,"3 8",29)
end

--任务101未完成   
function npctask30()
  Hero:ActFun(1046,"3 9",29)
end

--任务101未完成   
function npctask31()
  Hero:ActFun(1046,"3 10",29)
end

--领取江湖指南 
function npctask32()
	if(Hero:ActFun(1050,"1",501002) == false)then
		if(Hero:ActFun(508,"47 1",0) == true)then
  		Hero:ActFun(519,"1 1",501002)
  	else
  		Hero:ActFun(127,"背包已满，请清理背包",0)
  	end
  else
  	Hero:ActFun(127,"你已经有江湖指南，不能重复领取",0)
	end
end

--显示选项
if(gContext==2011600)then
--显示表头
npctop1()

--任务链结构开始	
  	if(Hero:ActFun(1080,"mask == 3",3) == false)then				--判断掩码
  		
  	
		if(Hero:ActFun(1080,"task has 0",3) == true)then				--判断任务链
			
			
		   --任务步骤301结构开始

			if(Hero:ActFun(1080,"step == 1",3) == true)then				--判断任务步骤
			
				
				if(Hero:ActFun(1080,"task state 0",3) == true)then				--判断任务状态
			
					 npcmid03010()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",3) == true)then				--判断任务状态

					 --npcmid03020()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",3) == true)then				--判断任务状态
					
					 --npcmid03011()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",3) == true)then				--判断任务状态

					 npcmid03011()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end

		   --任务步骤302结构开始			
				--判断步骤，在任务链第二步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 2",3) == true)then				--判断任务步骤
      			
				
				if(Hero:ActFun(1080,"task state 0",3) == true)then				--判断任务状态
					
					 --npcmid03020()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",3) == true)then				--判断任务状态
					
					 --npcmid03030()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",3) == true)then				--判断任务状态
					
					 npcmid03022()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",3) == true)then				--判断任务状态
					
					 npcmid03021()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
--任务步骤303结构开始			
				--判断步骤，在任务链第三步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 3",3) == true)then				--判断任务步骤
      				
				
				if(Hero:ActFun(1080,"task state 0",3) == true)then				--判断任务状态
					
					 npcmid03030()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",3) == true)then				--判断任务状态
					
					 --npcmid03040()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",3) == true)then				--判断任务状态
					
					 npcmid03032()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",3) == true)then				--判断任务状态
					
					 npcmid03031()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
--任务步骤304结构开始			
				--判断步骤，在任务链第四步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 4",3) == true)then				--判断任务步骤
      				
				
				if(Hero:ActFun(1080,"task state 0",3) == true)then				--判断任务状态
					
					 npcmid03040()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",3) == true)then				--判断任务状态
					
					 npcmid03050()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",3) == true)then				--判断任务状态
					
					 npcmid03041()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",3) == true)then				--判断任务状态
					
					 npcmid03041()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
--任务步骤305结构开始			
				--判断步骤，在任务链第五步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 5",3) == true)then				--判断任务步骤
      				
				
				if(Hero:ActFun(1080,"task state 0",3) == true)then				--判断任务状态
					
					 npcmid03050()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",3) == true)then				--判断任务状态
					
					 npcmid03060()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",3) == true)then				--判断任务状态

					 npcmid03052()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",3) == true)then				--判断任务状态
					
					 npcmid03051()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
--任务步骤306结构开始			
				--判断步骤，在任务链第六步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 6",3) == true)then				--判断任务步骤
      				
				
				if(Hero:ActFun(1080,"task state 0",3) == true)then				--判断任务状态
					
					 npcmid03060()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",3) == true)then				--判断任务状态

					 npcmid03070()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",3) == true)then				--判断任务状态

					 npcmid03062()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",3) == true)then				--判断任务状态
					
					 npcmid03061()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
--任务步骤307结构开始			
				--判断步骤，在任务链第七步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 7",3) == true)then				--判断任务步骤
      				
				
				if(Hero:ActFun(1080,"task state 0",3) == true)then				--判断任务状态
					
					 npcmid03070()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",3) == true)then				--判断任务状态

					 npcmid03080()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",3) == true)then				--判断任务状态

					 npcmid03071()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",3) == true)then				--判断任务状态
					
					 npcmid03071()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
--任务步骤308结构开始			
				--判断步骤，在任务链第七步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 8",3) == true)then				--判断任务步骤
      				
				
				if(Hero:ActFun(1080,"task state 0",3) == true)then				--判断任务状态
					
					 npcmid03080()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",3) == true)then				--判断任务状态

					 npcmid03090()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",3) == true)then				--判断任务状态

					 npcmid03082()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",3) == true)then				--判断任务状态
					
					 npcmid03081()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
--任务步骤309结构开始			
				--判断步骤，在任务链第七步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 9",3) == true)then				--判断任务步骤
      				
				
				if(Hero:ActFun(1080,"task state 0",3) == true)then				--判断任务状态

					 npcmid03090()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",3) == true)then				--判断任务状态
					
					 npcmid03100()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",3) == true)then				--判断任务状态

					 npcmid03091()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",3) == true)then				--判断任务状态
					
					 npcmid03091()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
--任务步骤310结构开始			
				--判断步骤，在任务链第七步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 11",3) == true)then				--判断任务步骤
      				
				
				if(Hero:ActFun(1080,"task state 0",3) == true)then				--判断任务状态

					 npcmid03110()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",3) == true)then				--判断任务状态
					
					 --npcmid03050()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",3) == true)then				--判断任务状态

					 npcmid03112()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",3) == true)then				--判断任务状态
					
					 npcmid03111()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
			end
                else

 			npcmid03010()
		end
	end

--任务链结构开始	
  	if(Hero:ActFun(1080,"mask == 1",1) == false)then				--判断掩码
  		
  	
		if(Hero:ActFun(1080,"task has 0",1) == true)then				--判断任务链
			
		   --任务步骤101结构开始

			if(Hero:ActFun(1080,"step == 1",1) == true)then				--判断任务步骤
				
				
				if(Hero:ActFun(1080,"task state 0",1) == true)then				--判断任务状态
					
					 npcmid01010()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",1) == true)then				--判断任务状态
					
					   --npcmid01020()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1001,"level >= 10",0)==true)then				--判断任务状态
          			
					   npcmid01012()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",1) == true)then				--判断任务状态
					
					 npcmid01011()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end

		   --任务步骤102结构开始			
				--判断步骤，在任务链第二步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 2",1) == true)then				--判断任务步骤
      				
				
				if(Hero:ActFun(1080,"task state 0",1) == true)then				--判断任务状态
					
					   npcmid01020()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",1) == true)then				--判断任务状态
					
					 --npcmid01030()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1096,"== 4096",1) == false)then				--判断任务状态
					
					 --npcmid01022()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 3",1) == true)then				--判断任务状态
					
					 npcmid01021()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
--任务步骤127结构开始			
				--判断步骤，在任务链第三步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 27",1) == true)then				--判断任务步骤
      				

				if(Hero:ActFun(1080,"task state 0",1) == true)then				--判断任务状态
					
					 npcmid01270()				--显示当前任务接取选项

				elseif(Hero:ActFun(1080,"task state 2",1) == true)then				--判断任务状态
					
					 --npcmid01280()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",1) == true)then				--判断任务状态
					
					 npcmid01272()				--显示任务完成选项

				elseif(Hero:ActFun(1080,"task state 1",1) == true)then				--判断任务状态
					
					 npcmid01271()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
--任务步骤128结构开始			
				--判断步骤，在任务链第四步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 28",1) == true)then				--判断任务步骤
      				
				
				if(Hero:ActFun(1080,"task state 0",1) == true)then				--判断任务状态
					
					 npcmid01280()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",1) == true)then				--判断任务状态
					
					-- npcmid01280()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",1) == true)then				--判断任务状态
					
					 --npcmid01281()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",1) == true)then				--判断任务状态
					
					 npcmid01281()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
--任务步骤129结构开始			
				--判断步骤，在任务链第四步进入下一步			   						     
      			elseif(Hero:ActFun(1080,"step == 29",1) == true)then				--判断任务步骤
      				
				
				if(Hero:ActFun(1080,"task state 0",1) == true)then				--判断任务状态
					
					 --npcmid01290()				--显示当前任务接取选项
						
				elseif(Hero:ActFun(1080,"task state 2",1) == true)then				--判断任务状态
					
					-- npcmid01060()				--显示下个任务接取选项

          			elseif(Hero:ActFun(1080,"task state 3",1) == true)then				--判断任务状态
					
					 --npcmid01052()				--显示任务完成选项
						
				elseif(Hero:ActFun(1080,"task state 1",1) == true)then				--判断任务状态
					
					 npcmid01291()				--显示未完成文字
					--判断状态，满足完成条件则进入下一步		
					
				end
--任务步骤结构结束
end
 else
 			npcmid01010()
end
end



 
--显示表尾
npcTail()


elseif(gContext==2011601)then
 npctask1()
elseif(gContext==2011602)then
 npctask2()
elseif(gContext==2011603)then
 npctask3()
elseif(gContext==2011604)then
 npctask4()
elseif(gContext==2011605)then
 npctask5()
elseif(gContext==2011606)then
 npctask6()
elseif(gContext==2011607)then
 npctask7()
elseif(gContext==2011608)then
 npctask8()
elseif(gContext==2011609)then
 npctask9()
elseif(gContext==2011610)then
 npctask10()
elseif(gContext==2011611)then
 npctask11()
elseif(gContext==2011612)then
 npctask12()
elseif(gContext==2011613)then
 npctask13()
elseif(gContext==2011614)then
 npctask14()
elseif(gContext==2011615)then
 npctask15()
elseif(gContext==2011616)then
 npctask16()
elseif(gContext==2011617)then
 npctask17()
elseif(gContext==2011618)then
 npctask18()
elseif(gContext==2011619)then
 npctask19()
elseif(gContext==2011620)then
 npctask20()
elseif(gContext==2011621)then
 npctask21()
elseif(gContext==2011622)then
 npctask22()
elseif(gContext==2011623)then
 npctask23()
elseif(gContext==2011624)then
 npctask24()
elseif(gContext==2011625)then
 npctask25()
elseif(gContext==2011626)then
 npctask26()
elseif(gContext==2011627)then
 npctask27()
elseif(gContext==2011628)then
 npctask28()
elseif(gContext==2011629)then
 npctask29()
 elseif(gContext==2011630)then
 npctask30()
 elseif(gContext==2011631)then
 npctask31()
 elseif(gContext==2011632)then
 npctask32()
 elseif(gContext==2011633)then
 npctask33()
 elseif(gContext==2011634)then
 npctask34()
end
